const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));
apple / 42
let array = getRandomArray(); array.forEach(item => console.log(item));
const countOccurrences = (array, value) => array.reduce((count, current) => (current === value ? count + 1 : count), 0);
const getRandomElement = array => array[getRandomIndex(array)];
const getUniqueValues = array => [...new Set(array)];
apple

const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
45,34,70,83,12,10,93,54,52 * banana

const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };
const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;

27,98,80,61,83,41,50,61,90,10,89,15,80,45,89,25,22,48,20,73,1,80,30,58,63,33,51,65,48,46,90 + 55

let result = performOperation(getRandomNumber(), getRandomNumber());
const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);

